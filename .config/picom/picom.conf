## This picomrc adjust this fork: https://github.com/jonaburg/picom ##
## Use --experimental-backends to enable blur and radius style ##

#################################
#             Corners           #
#################################
# # radius style (need --experimental-backends)
# requires: https://github.com/sdhand/compton
#corner-radius = 15.0;
#rounded-corners-exclude = [];
#round-borders = 100;
#round-borders-exclude = [];

# Specify a list of border width rules, in the format `PIXELS:PATTERN`,
# Note we don't make any guarantee about possible conflicts with the
# border_width set by the window manager.
#
# example:
#    round-borders-rule = [ "2:class_g = 'URxvt'" ];
#
round-borders-rule = [
#  "10:class_g     = 'Alacritty'",
];




#################################
#             Shadows           #
#################################


# Enabled client-side shadows on windows. Note desktop windows
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow,
# unless explicitly requested using the wintypes option.
#
shadow = false;

# The blur radius for shadows, in pixels. (defaults to 12)
# shadow-radius = 12
shadow-radius = 0;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
# shadow-opacity = 0.75;

# The left offset for shadows, in pixels. (defaults to -15)
# shadow-offset-x = -15
shadow-offset-x = 0;

# The top offset for shadows, in pixels. (defaults to -15)
# shadow-offset-y = -15
shadow-offset-y = 0;

# Hex string color value of shadow (#000000 - #FFFFFF, defaults to #000000). This option will override options set shadow-(red/green/blue)
shadow-color = "#000000";

shadow-exclude = [
#    "class_g = 'Dunst'",
#    "class_g ?= 'Rofi'",
#    "window_type = 'dnd'",
#    "window_type = 'tooltip'",
#    "_GTK_FRAME_EXTENTS@:c",
#    "_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'",
];

shadow-ignore-shaped = true;




#################################
#           Fading              #
#################################


# Fade windows in/out when opening/closing and when opacity changes,
#  unless no-fading-openclose is used.
# fading = false
fading = true;

# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)
# fade-in-step = 0.028
fade-in-step = 0.01;

# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)
fade-delta = 3;

fade-out-step = 0.1;

fade-exclude = [ 
#     "class_g = 'Dunst'",
#     "class_g ?= 'Vlc'",
#     "class_g ?= 'Fcitx'",
#     "class_g ?= 'fcitx'",
#     "class_g ?= 'Fcitx5'",
#     "class_g ?= 'fcitx5'",
#     "class_g ?= 'pycharm'",
#     "window_type = 'dnd'",
#     "window_type = 'tooltip'",
#     "_GTK_FRAME_EXTENTS@:c",
];



#################################
#   Transparency / Opacity      #
#################################


# Opacity
# active-opacity = 0.93;
# inactive-opacity = 0.89;
# frame-opacity = 1;
# inactive-opacity-override = false;

# inactive windows show
# inactive-dim = 0.03;

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`,
# like `50:name *= "Firefox"`. picom-trans is recommended over this.
# Note we don't make any guarantee about possible conflicts with other
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:

opacity-rule = [
   "90:class_g = 'Alacritty' && focused",
   "60:class_g = 'Alacritty' && !focused",
#   "90:class_g      = 'firefox'",
   "90:class_g      = 'Rofi'",
#  "90:class_g      = 'Rofi'",
];




#################################
#     Background-Blurring       #
#################################


# Parameters for background blurring, see the *BLUR* section for more information.
# blur-method = "kawase";
# blur-size = 12
#
# blur-deviation = false
#
# blur-strength = 5

# Blur background of semi-transparent / ARGB windows.
# Bad in performance, with driver-dependent behavior.
# The name of the switch may change without prior notifications.
#
blur-background = true;

# Blur background of windows when the window frame is not opaque.
# Implies:
#    blur-background
# Bad in performance, with driver-dependent behavior. The name may change.
#
blur-background-frame = true;

# Specify the blur convolution kernel, with the following format:
# example:
#   blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
#
# blur-kern = ""
# blur-kern = "7x7box";


# # blur style (need --experimental-backends)
# # enable blur-style maybe make corner shadow, you can disable shadow
# background-fixed = true;

# blur-background-exclude = [
#     "window_type = 'dock'",
#     "window_type = 'desktop'",
#     "class_g = 'Polybar'",
#     "class_g = 'i3bar'",
#     "class_g = 'i3-frame'",
#     "_GTK_FRAME_EXTENTS@:c"
# ];





#################################
#       General Settings        #
#################################

# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.
# `xrender` is the default one.
#
experimental-backends = true;
backend = "glx";

glx-no-stencil = true;
glx-copy-from-front = false;
glx-no-rebind-pixmap = true;
glx-swap-method = -1;

# prevent flickering after wake up
glx-use-copysubbuffer-mesa = true;


# Enable/disable VSync.
vsync = true;

# Try to detect WM windows (a non-override-redirect window with no
# child that has 'WM_STATE') and mark them as active.
mark-wmwin-focused = true;

# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.
mark-ovredir-focused = true;

# Try to detect windows with rounded corners and don't consider them
# shaped windows. The accuracy is not very high, unfortunately.
detect-rounded-corners = true;

# Detect '_NET_WM_' on client windows, useful for window managers
# not passing '_NET_WM_OPACITY' of client windows to frame windows.
detect-client-opacity = true;

# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows
# in the same group focused at the same time.
detect-transient = true;

# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same
# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if
# detect-transient is enabled, too.
detect-client-leader = true;

# Disable the use of damage information.
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
use-damage = true;

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
log-level = "warn";

use-ewmh-active-win = true;
dbe = false;
unredir-if-possible = false;

focus-exclude = [ ];





# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
#  normal = { fade = true; shadow = true; }
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false;}
#  toolbar = { shadow = false;}
  dnd = { shadow = false; }
  popup_menu = { opacity = 1; }
  dropdown_menu = { opacity = 1; }
};


# XSync
xrender-sync-fence = true;
